package main

import "fmt"

/*
1. 为什么需要变量：因为变量是程序的基本组成单位
2. 概念：变量是计算机内存中的一个数据存储空间，通过变量的名就可以获取到变量的值
*/

/*全局变量声明*/
var (
	b1 = 101
	b2 = 102
	b3 = "marry"
)

func main() {
	/* 变量的基本使用步骤：1)声明变量 2)赋值 3)使用 */

	//声明并赋值给变量
	var i = 88
	//使用变量
	fmt.Println("变量i的值等于: ", i)

	/*变量使用的注意事项：
	1)变量表示内存中的一个存储区域
	2)该区域有自己的名称（变量名）和类型（数据类型）
	3)Golang变量使用的三种方式
		a.指定变量类型，声明后若不赋值，使用默认值(0)
		b.根据值自行判定变量类型(类型推导）
		c.省略var，注意 :=左侧的变量不应该是已经声明过的，否则会导致編译错误
	4)多变量声明: 在編程中，有时我们需要一次性声明多个变量，Golang也提供这样的语法
	5)该区域的数据值可以在同一类型范围内不断变化
	6）变量在同一作用域内不能重名
	7）变量 = 变量名 + 值 + 数据类型
	8）Golang的变量如果没有赋初始值，编译器会自动赋予默认值，比如int为0、string为空串
	*/

	//Golang变量使用的三种方式
	//第一种：指定变量类型，声明后若不赋值，使用默认值
	//int 的默认值是0
	var p int
	fmt.Println("p =", p)
	//第二种：根据值自行判定变量类型（类型推导）
	var num = 10.11
	fmt.Println("num =", num)
	//第三种：省略var，注意 := 左侧的变量不应该是已经声明过的，吞则会导致编译错误
	//下面的方式等价 var name string name = "tom"
	name := "tom"
	fmt.Println("your name is", name)

	//一次声明多个变量
	var n1, n2, n3 int
	fmt.Println("n1 =", n1, "n2 =", n2, "n3 =", n3)
	var m1, m2, m3 = 103, "tom", "true"
	fmt.Println("m1 =", m1, "m2 =", m2, "m3 =", m3)
	//全局变量测试输出
	fmt.Println("b1 =", b1, "b2 =", b2, "b3 =", b3)

	/*
	   程序中 + 的使用：
	   	a.当两边都是数值型时，则做加法运算
	   	b.当两边都是字符串时，则做字符串拼接
	*/
	var p1, p2 int = 1, 2
	fmt.Println("p1+p2=", p1+p2)
	var p3, p4, p5 string = "weigeng", "is", "good"
	fmt.Println("p3+p4+p5=", p3+p4+p5)
}
